<% 
  @entity ||= nil   
%>
<div class="d-sm-flex align-items-center justify-content-between mb-4">
  <% if params[:folder_id].present? %>
    <% 
      # Get the folder
      @folder = Folder.find(params[:folder_id]) 
      # link for users or just path for investors
      link = (@folder.entity_id == current_user.entity_id) ? link_to(@folder.name, @folder) : @folder.name 
    %>
    <h4 class="mb-0 text-gray-800 hideMobP">
      Documents: <%= link %>
    </h4>
  <% else %>
    <h4 class="mb-0 text-gray-800  hideMobP">
      Documents
    </h4>
  <% end %>

  <% 
    owner ||= nil
    entity_id = @entity&.id
    entity_id ||= owner&.entity_id
    entity_id ||= current_user.entity_id

    document = Document.new(entity_id: , owner: owner)
    doc_attributes = document.attributes.delete_if{|k,v| !["entity_id", "owner_id", "owner_type"].include?(k)}

    @folder ||= nil
    folder_id = @folder&.id || owner&.document_folder_id 
    @folder ||= Folder.find(folder_id) if folder_id.present?
  %>

  <input type="text" id="selected_folder_id" value="<%=folder_id%>" hidden>

  <span>
    <div class="btn-group">
      <div class="dropdown">
        <button class="btn btn-outline-primary dropdown-toggle" type="button" id="doc_actions"
                data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
          Actions
        </button>
        <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
        <% if folder_id.present? %>
      
            <%= link_to "Download Folder", download_folder_path(id: folder_id), 
                class: "dropdown-item hideMobP", data: {action: "click->confirm#popup"} if policy(@folder).download? %>

            <%= link_to "New Folder", new_folder_path("folder[entity_id]": current_user.entity_id, 
                "folder[parent_id]": @folder.id), 
                class: "dropdown-item" if policy(@folder).create?   %> 

            <%= link_to "New Document", new_document_path( 
                        document: doc_attributes, 
                        "document[folder_id]": folder_id), 
                        {class: "dropdown-item" }  if policy(document).create? %>


            <%= link_to "Bulk Upload", 
                new_import_upload_path("import_upload[owner_id]": folder_id, 
                    "import_upload[owner_type]": "Folder", 
                    "import_upload[import_type]": "Documents", 
                    "sample_upload": "DOCS_SAMPLE"), 
                    { class: "dropdown-item hideMobP"} if policy(@folder).update? %> 


            <div class="dropdown-divider"></div>
            
            <% if params[:q].present? %>
              <%= render "documents/bulk_actions", folder_id: folder_id %>
            <% else %>
              <%= link_to "Filter Documents", documents_path(folder_id:, filter: true, no_folders: true), class: "dropdown-item" %>
            <% end %>

            <%#  remove later once the above one is fixed %>
            <%= button_to "Send For eSignatures" , 
              send_all_for_esign_documents_path(folder_id: folder_id), 
              data: {action: "click->confirm#popup", msg: "This will send all the approved documents ready for esigning to the esign provider.", method: :patch},
              class: "dropdown-item" if false && policy(Document).send_all_for_esign? %>

          <% else %>
            <%= link_to "New Document", new_document_path( 
                              document: doc_attributes), 
                              {class: "dropdown-item" }  if document && policy(document).create? %>

            <%= render "documents/bulk_actions" %>
            
          <% end %>

        </div>
      </div>
    </div>      
    <% 
      owner ||= nil 
      @deal  ||= nil
      if owner && ["Deal", "DealInvestor"].include?(owner.class.name)
        @deal = owner.is_a?(Deal) ? owner : owner.deal 
      end
    %>
    <%= link_to "Data Room", 
        folder_documents_path(entity_id: @deal.entity_id, folder_id: @deal.data_room_folder_id, parent_folder_id: @deal.document_folder.id), {class: "btn btn-outline-primary" }  if @deal %>

  </span>
</div>

<div class="table-responsive">

  <table id="documents" class="table table-bordered  dataTable jqDataTable">

    <thead>
      <tr>
        <th>
          Name
        </th>
        <th class="hideMobP">
          Tags
        </th>
        <th class="hideMobP">
          Created
        </th>
        <th>
        </th>

      </tr>
    </thead>
    <tbody>
      <% documents.each do |document| %>
        <%= render partial: "documents/document" , locals: {document: document} %>
      <% end %>
    </tbody>
  </table>


</div>


<% 
msg ||= nil
if false && msg.present?
%>
  <div class="text-center">
    <span class="alert alert-info"><%= msg %></span>
  </div>
<% end %>