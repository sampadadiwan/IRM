<%
  lazy_load_data ||= false
  import_upload_id ||= params[:import_upload_id]
%>
<% data_source ||= investor_kycs_path(params: params.to_unsafe_h, import_upload_id:, format: :json, all: true) %>


  <div class="d-sm-flex align-items-center justify-content-between mb-4">
    <h1 class="h3 mb-0 text-gray-800">KYCs</h1>

    <span>
      <%
        entity_id = @investor ? @investor.entity_id : current_user.entity_id
        investor_kyc = InvestorKyc.new(investor_id: @investor&.id, entity_id: entity_id)
      %>

      <% if policy(investor_kyc).new? && current_user.curr_role != "investor" %>
      <div class="btn-group">
        <div class="dropdown">
          <button class="btn btn-outline-primary dropdown-toggle" type="button"
                  data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            New KYC
          </button>
          <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">

            <%= link_to "Individual" , new_investor_kyc_path("investor_kyc[investor_id]": @investor&.id, "investor_kyc[entity_id]": entity_id, "investor_kyc[kyc_type]": "Individual"), {class: "dropdown-item" } %>

            <%= link_to "Non Individual" , new_investor_kyc_path("investor_kyc[investor_id]": @investor&.id, "investor_kyc[entity_id]": entity_id, "investor_kyc[kyc_type]": "Non Individual"), {class: "dropdown-item" } %>

            <%= link_to "Report" , investor_kycs_path(filter: true), {class: "dropdown-item" } %>

            <%= link_to "Custom KYC Notification" , new_custom_notification_path("custom_notification[for_type]": "InvestorKyc", "custom_notification[entity_id]": entity_id), {class: "dropdown-item" } %>

            <%= link_to "Custom Agreement Notification" , new_custom_notification_path("custom_notification[for_type]": "Send Document", "custom_notification[entity_id]": entity_id), {class: "dropdown-item" } %>
          </div>
        </div>
      </div>
      <% end %>

      <% if @investor.blank? %>
      <div class="btn-group">
        <div class="dropdown">
          <button class="btn btn-outline-success dropdown-toggle" type="button"
                  data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            KYC Documents
          </button>
          <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">

            <%= link_to "eSignatures Report" , report_entity_path(id: entity_id, report: "dashboard/e_signatures"), {class: "dropdown-item" } if policy(ESignature).index? %>

            <%= link_to "Generate Kyc Docs", generate_all_docs_investor_kycs_path(entity_id:, q: params[:q].to_unsafe_h), class: "dropdown-item" if params[:q].present? && policy(investor_kyc).new?  %>

            <%= link_to "Approve Kyc Docs", approve_documents_path(entity_id:, owner_type: "InvestorKyc"), class: "dropdown-item" if current_user.has_cached_role?(:approver) %>

          </div>
        </div>
      </div>
      <% end %>

      <% if params[:q].present? %>
        <%= render "investor_kycs/bulk_actions" %>
      <% elsif @investor.blank? %>
        <%= button_to "Send KYC Reminders", send_kyc_reminder_to_all_investor_kycs_path("entity_id": entity_id), method: :post, class: "btn btn-outline-primary", data: {action: "click->confirm#popup", turbo:false,
        method: :post, msg: "This will generate a notification to all investor users whose KYC is unverified"} if policy(InvestorKyc).send_kyc_reminder_to_all? %>
      <% end %>

      <% if current_user && policy(InvestorKyc).import? %>
      <div class="btn-group">
        <div class="dropdown">
          <button class="btn btn-outline-success dropdown-toggle" type="button"
                  data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            Upload/Download
          </button>
          <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
            <%= link_to "Download", download_xl_link(data_source),  {class: "dropdown-item" }  %>

            <div class="dropdown-divider"></div>

            <%= link_to "Upload KYC Details",
              new_import_upload_path(
                  "import_upload[import_type]": "InvestorKyc",
                  "sample_upload": "INVESTOR_KYCS_SAMPLE"),
                  { class: "dropdown-item"}  %>

            <%= link_to "Upload KYC Documents",
              new_import_upload_path(
                  "import_upload[import_type]": "KycDocs",
                  "sample_upload": "INVESTOR_KYCS_DOCS_SAMPLE"),
                  { class: "dropdown-item"}  %>

          </div>
        </div>
      </div>
      <% end %>
    </span>
  </div>

  <% investor_kycs_frame = "investor_kycs_frame" %>
  <%=render SearchComponent.new(data_source: investor_kycs_path( params: params.to_unsafe_h, import_upload_id:), turbo_frame: investor_kycs_frame) %>

  <div class="table-responsive">
    <table id="investor_kycs" class="table table-bordered dataTable action_table hover">
        <%
          default_columns_map = if current_user.curr_role == "investor"
            InvestorKyc::INVESTOR_STANDARD_COLUMNS
          else
            if params.include?("investor_id")
              InvestorKyc::INVESTOR_TAB_STANDARD_COLUMNS
            else
              InvestorKyc::STANDARD_COLUMNS
            end
          end
        %>
        <% ransack_table_header = RansackTableHeader.new(InvestorKyc, q: @q, default_columns_map:, current_user: current_user, records: investor_kycs, report_id: params["report_id"], turbo_frame: investor_kycs_frame, referrer: request.referrer) %>
        <%= render ransack_table_header %>
      <tbody>
        <% investor_kycs.each do |investor_kyc| %>
          <%= render "investor_kycs/investor_kyc",  investor_kyc: investor_kyc.decorate, columns: ransack_table_header.columns%>
        <% end %>
      </tbody>
    </table>
    <% if investor_kycs.present? %>
      <%= page_entries_info investor_kycs, entry_name: 'item' %>
      <%= paginate investor_kycs, data: {turbo_frame: investor_kycs_frame} %>
    <% end %>
</div>
