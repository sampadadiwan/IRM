<div class="table-responsive" data-controller="datatable">
<% 
    bridge_fields = ["Entry"] + ValueBridgeService::VALUE_BRIDGE_FIELDS 
    waterfall_chart_data = []
%>
<table class="table table-bordered dataTable">

    <!-- Header row -->
    <thead>
    <tr>
        <th>
        </th>
        <% bridge_fields.each_with_index do |bridge_field, idx| %>
            <th>
                <%= bridge_field %>
            </th>
            <% 
                value = idx == 0 ? @bridge[bridge_field].json_fields["enterprise_value"]  : @bridge[bridge_field].json_fields["enterprise_value_change"] 
                color = value && value > 0 ? "#13deb9" : "#fa896b"
                waterfall_chart_data << { name: bridge_field, y: value, color: color } 
            %>
        <% end %>

        <% waterfall_chart_data << { name: "Exit", y: @bridge["Exit"].json_fields["enterprise_value"], isSum: true, color: "#13deb9" } %>
    </tr>
    </thead>

    <!-- Body rows -->
    <tbody>
    <% ValueBridgeService::KEY_FIELDS.each do |key| %>    
        
        <tr>
            <td>
                <span class="text-primary"><%= key %></span>
            </td>
            <% bridge_fields.each_with_index do |bridge_field, idx| %>    
                <td>
                    <% 
                        bridge_field_name = FormCustomField.to_name(bridge_field) 
                        key_name = FormCustomField.to_name(key)                        
                    %>
                    <%= @bridge[bridge_field].json_fields[key_name] %>

                </td>                
            <% end %>
        </tr>
        
    <% end %>
    </tbody>
</table>


</div>

<div class="associated_entity">
    <div id="waterfall-chart" data-chart-values='<%= raw waterfall_chart_data.to_json %>'></div>
</div>


<script>
  document.addEventListener("DOMContentLoaded", function () {
  var chartElement = document.getElementById("waterfall-chart");
  var chartData = chartElement.getAttribute("data-chart-values");

  console.log("Raw Data Attribute:", chartData); // Debugging Step

  try {
    chartData = JSON.parse(chartData);
  } catch (e) {
    console.error("Invalid JSON Data for Chart:", e);
    return;
  }

  Highcharts.chart(chartElement, {
    chart: { type: 'waterfall' },
    title: { text: 'Value Bridge' },
    xAxis: { type: 'category' },
    yAxis: { title: { text: 'Amount' } },
    series: [{
      name: "Revenue Flow",
      data: chartData,
      dataLabels: { enabled: true }
    }]
  });

    console.log("Waterfall chart initialized");
});
</script>