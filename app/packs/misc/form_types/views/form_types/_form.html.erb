<%= render FormCard.new(title: "Customize: #{@form_type.name.presence || 'New'}") do %>

  <%= form_with(model: form_type, validate: true) do |form| %>
    <% if form_type.errors.any? %>
      <div class="alert alert-danger">
        <h2><%= pluralize(form_type.errors.count, "error") %> prohibited this form_type from being saved:</h2>

        <ul>
          <% form_type.errors.each do |error| %>
            <li><%= error.full_message %></li>
          <% end %>
        </ul>
      </div>
    <% end %>
    
    <% 
    
      types = ["Investor", "SecondarySale", "Deal", "Offer", "Interest", "Document", "OptionPool", "Task", "Valuation", "Holding", "InvestmentOpportunity", "Fund", "CapitalCommitment", "CapitalCall", "CapitalRemittance", "Approval", "InvestorKyc", "IndividualKyc", "NonIndividualKyc", "FundUnitSetting", "AccountEntry", "PortfolioInvestment", "User", "InvestmentInstrument"] 

      types += [form_type.name] unless form_type.name.blank? || types.include?(form_type.name) 

    %>

    <div data-controller="customfield">
      <div class="form-group">
        <%= form.label :name, "Form Name" %>
        <%= form.select :name, types.sort, {}, class: "form-control"  %>
      </div>

      <h1>Custom Fields</h1>
      <div id='form_custom_fields'>
        <%= form.fields_for :form_custom_fields do |field| %>
          <%= render 'form_custom_fields', :f => field  unless (field.object.field_type == "Calculation" || field.object.internal) && params[:debug].blank? %>
        <% end %>
        <div class='links'>
        </div>
      </div>
        
      <div class="form-group">
        <%= link_to_add_association 'Add Field', form, :form_custom_fields, class: "btn btn-outline-primary" %>
        <%= form.submit "Save", {class: "btn btn-outline-primary"}%>
      </div>
    </div>
  <% end %>

<% end %>