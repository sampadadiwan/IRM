<% 
  fund ||= nil 
  import_upload_id ||= params[:import_upload_id]
  title ||= params[:title] || "Account Entries"
%>        

<% 
    data_source ||= account_entries_path(q: params.to_unsafe_h[:q], import_upload_id:, capital_commitment_id: params[:capital_commitment_id], format: :json, all: true, fund_id: params[:fund_id], fund_account_only: params[:fund_account_only])

    xl_link = download_xl_link(data_source) 
    lazy_load_data ||= false 

    col_params = { }
    cols ||= "default"

    col_params[:column_names] = AccountEntry::STANDARD_COLUMNS.keys
    col_params[:column_fields] = AccountEntry::STANDARD_COLUMNS.values
    
    if params[:capital_commitment_id].blank?
      col_params[:column_names] = ["Fund", "Investor"] + col_params[:column_names]
      col_params[:column_fields] = ["fund_name", "investor_name"] + col_params[:column_fields]
    end

    column_names, field_list = get_columns(AccountEntry, params: col_params) 
  %>


<div class="table-responsive">

  <div class="d-sm-flex align-items-center justify-content-between mb-4">
    <h1 class="h3 mb-0 text-gray-800"><%= title %></h1>

    <span>  
      <%  
        if params[:capital_commitment_id].present? || params[:fund_id].present?
            account_entry = AccountEntry.new(capital_commitment_id: params[:capital_commitment_id], fund_id: params[:fund_id]) 
            account_entry.entity_id =current_user.entity_id
                
      %>

      
        <%= link_to "New Account Entry", new_account_entry_path("account_entry[capital_commitment_id]": account_entry.capital_commitment_id, "account_entry[entity_id]": account_entry.entity_id, "account_entry[fund_id]": account_entry.fund_id), {class: "btn btn-outline-primary ti ti-plus"} if policy(account_entry).new? %>

        <%= link_to "Upload", 
                      new_import_upload_path("import_upload[owner_id]": account_entry.fund_id, 
                      "import_upload[owner_type]": "Fund", 
                      "import_upload[import_type]": "AccountEntry", 
                      "sample_upload": "ACCOUNT_ENTRY_SAMPLE"), 
                      { class: "btn btn-outline-primary ti ti-upload"}   %> 


        <div class="btn-group">
          <button class="btn btn-outline-success dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
            <i class="ti ti-download me-2"></i> Download
          </button>
          <ul class="dropdown-menu">
            <li>
              <%= link_to xl_link, class: "dropdown-item", data: { turbo: false } do %>
                <i class="ti ti-file-spreadsheet me-2"></i> <%= t_common(:export_all) %>
              <% end %>
            </li>
            <li>
              <button class="dropdown-item" data-controller="export-xl"
                      data-action="click->export-xl#export"
                      data-tableid="account_entries_table"
                      data-filename="Account Entries">
                <i class="ti ti-table-export me-2"></i> <%= t_common(:export_visible) %>
              </button>
            </li>
          </ul>
        </div>


        <%= button_to "Delete Results", delete_all_account_entries_path(fund_id: params[:fund_id], q: params[:q].to_unsafe_h), class: "btn btn-outline-danger ti ti-trash", form_class: "deleteButton", data: {action: "click->confirm#popup", turbo:false, msg: "Delete all account entries in search results?", method: :post}  if params[:q].present? %>

      <% else %>
        <%= link_to "Download", xl_link, class: "btn btn-outline-success" %>
        <%= button_to "Delete Results", delete_all_account_entries_path(fund_id: params[:fund_id], q: params[:q].to_unsafe_h), class: "btn btn-outline-danger", form_class: "deleteButton", data: {action: "click->confirm#popup", turbo:false, msg: "Delete all account entries in search results?", method: :post}  if params[:q].present? %>
      <% end %>


      <%= link_to "Filter", account_entries_path(fund_id: params[:fund_id], q: ransack_query_params("capital_commitment_id", :eq, params[:capital_commitment_id])), {class: "btn btn-outline-success ti ti-filter" }  %>


    </span>

    
  </div>

  

  <div class="table-responsive">

      <%= render RansackTable.new(AccountEntry, q: @q, current_user: current_user, records: account_entries, report_id: params["report_id"], turbo_frame: "account_entries_list", referrer: request.referrer) %>

  </div>

</div>
