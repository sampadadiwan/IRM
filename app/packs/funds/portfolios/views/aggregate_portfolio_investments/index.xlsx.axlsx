wb = xlsx_package.workbook

form_type, custom_field_names, custom_headers, custom_calcs, custom_calc_headers = get_form_type("AggregatePortfolioInvestment")
inv_form_type, inv_custom_field_names, inv_custom_headers = get_form_type("Investor")
inv_inst_form_type, inv_inst_custom_field_names, inv_inst_custom_headers = get_form_type("InvestmentInstrument")

# Get the latest FundRatios for the APIs
first_api = @aggregate_portfolio_investments[0]
api_fund_ratios = FundRatio.latest.where(entity_id: first_api.entity_id, owner_type: "AggregatePortfolioInvestment") if first_api

wb.add_worksheet(name: "AggregatePortfolioInvestments") do |sheet|
  # Create the header row
  sheet.add_row(["Fund", "Portfolio Company", "Instrument", "Bought Quantity", "Bought Amount", "Avg Cost / Share", "Transfer Quantity", "Transfer Amount", "Sold Quantity", "Sold Amount", "FIFO Cost", "Realized Gain", "Current Quantity", "Currency", "Cost of Remaining", "FMV", "Unrealized Gain", "IRR", "Value To Cost", "IRR Date"] + custom_headers + custom_calc_headers + ["Category", "Sub Category", "Sector"] + inv_inst_custom_headers)

  # Create entries for each item
  @aggregate_portfolio_investments.each do |api|
    # Get the custom fields
    custom_field_values = get_custom_values(api, form_type, custom_field_names)
    custom_calc_values = get_custom_calc_values(api, form_type, custom_calcs)

    # We display the CFs for investor and investment_instrument
    inv_custom_field_values = get_custom_values(api.portfolio_company, inv_form_type, inv_custom_field_names)
    inv_inst_custom_field_values = get_custom_values(api.investment_instrument, inv_inst_form_type, inv_inst_custom_field_names)

    # Get the fund ratios for this api
    irr = api_fund_ratios.detect { |fr| fr.owner_id == api.id && fr.name == "IRR" }
    value_to_cost = api_fund_ratios.detect { |fr| fr.owner_id == api.id && fr.name == "Value To Cost" }

    # Add row to XL

     sheet.add_row [api.fund.name, api.portfolio_company_name, api.investment_instrument&.name, api.bought_quantity, api.bought_amount.to_d, api.avg_cost.to_d, api.transfer_quantity, api.transfer_amount.to_d, api.sold_quantity, api.sold_amount.to_d, api.cost_of_sold.to_d, api.gain.to_d, api.quantity, api.fund.currency.to_s, api.cost_of_remaining.to_d, api.fmv.to_d, api.unrealized_gain.to_d, irr&.display_value, value_to_cost&.display_value, irr&.end_date] +
                  custom_field_values + custom_calc_values +
                  [api.investment_instrument&.category, api.investment_instrument&.sub_category, api.investment_instrument&.sector] + inv_inst_custom_field_values
  end
end

form_type, custom_field_names, custom_headers, custom_calcs, custom_calc_headers = get_form_type("PortfolioInvestment")

wb.add_worksheet(name: "PortfolioInvestments") do |sheet|
  # Create the header row
  sheet.add_row(["Id", "Fund", "Portfolio Company", "Instrument", "Investment Date", "Quantity", "Instrument Currency", "Base Amount", "Fund Currency", "Amount", "Cost", "FMV", "Realized Gain", "Unrealized Gain", "Sold Quantity", "Transfer Quantity", "Net Quantity Available", "Total Qty As Of Investment Date", "Cost Of Sold", "Notes"] + custom_headers + custom_calc_headers)

  # Create entries for each item
  @aggregate_portfolio_investments.includes(portfolio_investments: %i[fund investment_instrument]).find_each do |api|
    api.portfolio_investments.each do |pi|
      custom_field_values = get_custom_values(pi, form_type, custom_field_names)
      custom_calc_values = get_custom_calc_values(pi, form_type, custom_calcs)

      if pi.buy?
        net_qty = pi.net_quantity
        unrealized_gain = pi.unrealized_gain
        gain = ""
      else
        net_qty = ""
        unrealized_gain = ""
        gain = pi.gain
      end

      sheet.add_row [pi.id, pi.fund.name, pi.portfolio_company_name, pi.investment_instrument, pi.investment_date, pi.quantity, pi.investment_instrument&.currency&.to_s, pi.base_amount.to_d, pi.fund.currency.to_s, pi.amount.to_d, pi.cost.to_d, pi.fmv.to_d, gain.to_d, unrealized_gain.to_d, pi.sold_quantity, pi.transfer_quantity, net_qty, pi.quantity_as_of_date, pi.cost_of_sold.to_d, pi.notes] + custom_field_values + custom_calc_values
    end
  end
end
